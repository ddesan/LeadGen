"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Parallax = _interopRequireDefault(require("./Parallax"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var containerStyle = {
  position: 'relative',
  overflow: 'hidden',
  width: '100%',
  height: '50vh'
};
var absoluteStyle = {
  position: 'absolute',
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};

var ParallaxBanner = function ParallaxBanner(_ref) {
  var children = _ref.children,
      className = _ref.className,
      layers = _ref.layers,
      style = _ref.style,
      disabled = _ref.disabled;
  return _react.default.createElement("div", {
    style: _objectSpread({}, containerStyle, style),
    className: 'parallax-banner' + (className ? " ".concat(className) : '')
  }, layers.map(function (_ref2, i) {
    var image = _ref2.image,
        amount = _ref2.amount,
        layerChildren = _ref2.children,
        _ref2$expanded = _ref2.expanded,
        expanded = _ref2$expanded === void 0 ? true : _ref2$expanded;
    // if this is an expanded layer overwrite the top/bottom styles with negative margins
    var expandedStyle = expanded ? {
      top: Math.abs(amount) * 100 * -1 + '%',
      bottom: Math.abs(amount) * 100 * -1 + '%'
    } : {};
    return _react.default.createElement(_Parallax.default, {
      key: "layer-".concat(i),
      y: [amount * -1 * 100 + '%', amount * 100 + '%'],
      styleInner: absoluteStyle,
      styleOuter: absoluteStyle,
      disabled: disabled
    }, image ? _react.default.createElement("div", {
      className: "parallax-banner-layer-".concat(i),
      style: _objectSpread({
        backgroundImage: "url(".concat(image, ")"),
        backgroundPosition: 'center',
        backgroundSize: 'cover'
      }, absoluteStyle, expandedStyle)
    }) : _react.default.createElement("div", {
      className: "parallax-banner-layer-".concat(i),
      style: _objectSpread({}, absoluteStyle, expandedStyle)
    }, layerChildren));
  }), children);
};

ParallaxBanner.defaultProps = {
  disabled: false
};
ParallaxBanner.propTypes = {
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  disabled: _propTypes.default.bool.isRequired,
  layers: _propTypes.default.arrayOf(_propTypes.default.shape({
    amount: _propTypes.default.number.isRequired,
    children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
    expanded: _propTypes.default.bool,
    image: _propTypes.default.string
  })),
  style: _propTypes.default.object
};
var _default = ParallaxBanner;
exports.default = _default;